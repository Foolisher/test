<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2013
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${namespace}">

    <#assign resultMapId="${modelAlias?uncap_first}ResultMap"/>
    <#assign ali="${model?uncap_first}"/>
    <resultMap id="${resultMapId}" type="${modelAlias}">
        <id property="id" column="id"/>
        <#list properties as prop>
            <#if "${prop.javaName}"!="id">
        <result property="${prop.javaName}" column="${prop.dbName}"/>
            </#if>
        </#list>
    </resultMap>


    <sql id="columns"><#assign i=1/>
    <#list properties as prop><#if "${prop.javaName}" != "id">${prop.dbName}<#if prop_has_next>,</#if></#if></#list>
    </sql>


    <sql id="query_conditions">
    <#list properties as prop>
      <#if "${prop.javaName}" != "id" && "${prop.javaName}"!="createdAt" && "${prop.javaName}"!="updatedAt">
        <#if "${prop.javaType}"=="Date" && ("${prop.javaName}" = "startDate" || "${prop.javaName}" = "beginDate")>
      <if test="${prop.javaName}!=null"> AND <![CDATA[ ${prop.dbName} <= #${'{'}${prop.javaName}${'}'} ]]></if>
        <#elseif "${prop.javaType}"=="Date" && ("${prop.javaName}" = "endDate")>
      <if test="${prop.javaName}!=null"> AND <![CDATA[ ${prop.dbName} >= #${'{'}${prop.javaName}${'}'} ]]></if>
        <#else>
      <if test="${prop.javaName}!=null">AND ${prop.dbName} = #${'{'}${prop.javaName}${'}'}</if>
        </#if>
        </#if>
    </#list>
    </sql>


    <insert id="create" parameterType="${modelAlias}" useGeneratedKeys="true" keyProperty="id">
      INSERT INTO ${tableName} ( <include refid="columns"/>)
      VALUES(
       <#list properties as prop><#if "${prop.javaName}" != "id"><#if "${prop.javaName}" == "createdAt" || "${prop.javaName}" == "updatedAt">now()<#else>#${'{'}${prop.javaName}${'}'}</#if><#if prop_has_next>,</#if></#if></#list>
      )
    </insert>


    <select id="findById" parameterType="long" resultMap="${resultMapId}">
      SELECT id, <include refid="columns"/>
        FROM ${tableName}
      WHERE
       `id` = #${'{'}id${'}'}
    </select>


    <select id="findByIds" parameterType="list" resultMap="${resultMapId}">
        SELECT id,<include refid="columns"/>
            FROM ${tableName}
        WHERE
            id IN <foreach collection="list" open="(" separator="," close=")" item="id">
                #${'{'}id${'}'}
            </foreach>
    </select>


    <select id="countBy" parameterType="java.util.Map" resultType="int">
      SELECT COUNT(1)
        FROM ${tableName}
      <where>
          <include refid="query_conditions"/>
      </where>
    </select>


    <select id="findBy" parameterType="java.util.Map" resultMap="${resultMapId}">
      SELECT id, <include refid="columns"/>
        FROM ${tableName}
      <where>
        <include refid="query_conditions"/>
      </where>
    ORDER BY id DESC
    <if test="offset!=null and limit!=null">
        LIMIT #${'{'}offset${'}'}, #${'{'}limit${'}'}
    </if>
    </select>

    <#if addQueryConds??>
    <#list addQueryConds as fds>
    <#assign joinedFields><#list fds as fd>${fd.javaName?cap_first}<#if fd_has_next>And</#if></#list></#assign>
    <select id="countBy${joinedFields}" parameterType="java.util.Map" resultType="int">
      SELECT COUNT(1)
        FROM  ${tableName}
      WHERE <#list fds as fd>${fd.dbName}=#${'{'+fd.javaName+'}'}<#if fd_has_next> AND </#if></#list>
    </select>

    <select id="findBy${joinedFields}" parameterType="java.util.Map" resultMap="${resultMapId}">
      SELECT id,<include refid="columns"/>
        FROM  ${tableName}
      WHERE <#list fds as fd>${fd.dbName}=#${'{'+fd.javaName+'}'}<#if fd_has_next> AND </#if></#list>
        ORDER BY id DESC
      LIMIT #${'{'+"offset"+'}'}, #${'{'+"limit"+'}'}
    </select>


    </#list>
    </#if>


    <update id="update" parameterType="${model}">
      UPDATE ${tableName}
      <set>
        <#list properties as p>
          <#if "${p.javaName}" != "id" && "${p.javaName}"!="updatedAt" && "${p.javaName}"!="createdAt">
          <if test="${p.javaName}!=null">${p.dbName} = #${'{'}${p.javaName}${'}'},</if>
          </#if>
        </#list>
        updated_at = now()
      </set>
      WHERE
        id = #${"{"+"id"+"}"}
    </update>


    <delete id="deleteByIds" parameterType="list">
      DELETE
        FROM ${tableName}
      WHERE
        id IN <foreach collection="list" open="(" separator="," close=")" item="id">
          #${'{'}id${'}'}
        </foreach>
    </delete>


</mapper>